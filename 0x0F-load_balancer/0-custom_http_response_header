#!/usr/bin/env bash
# duplicate web-01 to web-02

# This script installs and configures Nginx on a new Ubuntu machine
# It sets up a simple web server with a custom index page and a custom 404 error page
# It also redirects /redirect_me to a specific URL
# Uncomment the next line to see each command as it runs for debugging purposes
# set -x

echo -e "Updating and doing some minor checks...\n"

# Function to install a package if it is not already installed
function install() {
    command -v "$1" &> /dev/null  # Check if the command exists

	#shellcheck disable=SC2181
    if [ $? -ne 0 ]; then  # If the command does not exist
        echo -e "    Installing: $1\n"
        sudo apt-get update -y -qq && \
            sudo apt-get install -y "$1" -qq
        echo -e "\n"
    else
        echo -e "    ${1} is already installed.\n"
    fi
}

# Install Nginx
install nginx

echo -e "\nSetting up some minor stuff.\n"

# Allowing Nginx on the firewall to accept HTTP traffic
sudo ufw allow 'Nginx HTTP'

# Ensure /var/www directory exists and set permissions
if [ -d "/var/www" ]; then
    sudo chown -R "$USER":"$USER" /var/www  # Change ownership to the current user
    sudo chmod -R 755 /var/www  # Set directory permissions
else
    sudo mkdir -p /var/www  # Create /var/www directory if it doesn't exist
    sudo chown -R "$USER":"$USER" /var/www
    sudo chmod -R 755 /var/www
fi

# Create necessary directories if not present
for dir in /var/www/{html,error}; do
    if ! [ -d "$dir" ]; then
        mkdir -p "$dir"  # Create directory
    fi
done

# Create a simple index page
echo "Hello World!" > /var/www/html/index.html

# Create a custom 404 error page
echo "Ceci n'est pas une page" > /var/www/html/error_404.html

# Backup the default Nginx configuration file
if [ -f /etc/nginx/sites-enabled/default ]; then
    sudo mv /etc/nginx/sites-enabled/default nginx-sites-enabled_default.backup
fi

# Get the hostname of the server
HOSTNAME=$(hostname)

# Nginx server configuration block
server_config="
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;
    server_name _;
    add_header X-Served-By $HOSTNAME;  # Add custom header with hostname
    location / {
        try_files \$uri \$uri/ =404;  # Serve files or show 404 if not found
    }
    location /redirect_me {
        return 301 https://th3-gr00t.tk/;  # Redirect /redirect_me to a URL
    }
    error_page 404 /error_404.html;  # Use custom 404 error page
    location = /error_404.html {
        internal;  # Internal use only
    }
}"

# Write the server configuration to the default Nginx site config
echo "$server_config" | sudo tee /etc/nginx/sites-available/default > /dev/null

# Enable the new site configuration
sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default

# Test the Nginx configuration for syntax errors
sudo nginx -t

# Restart Nginx to apply changes
if [ "$(pgrep -c nginx)" -le 0 ]; then
    sudo service nginx start  # Start Nginx if it's not running
    exit 0
else
    sudo service nginx restart  # Restart Nginx if it's already running
    exit 1
fi
